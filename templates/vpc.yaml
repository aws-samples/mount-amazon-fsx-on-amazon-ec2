# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VpcCidrBlock:
    Type: String
    Description: "VPC CIDR Block"
    Default: "10.0.0.0/16"
  PublicSubnet1CidrBlock:
    Type: String
    Description: "Public Subnet1 CIDR Block"
    Default: "10.0.0.0/24"
  PublicSubnet2CidrBlock:
    Type: String
    Description: "Public Subnet2 CIDR Block"
    Default: "10.0.1.0/24"
  PrivateSubnet1CidrBlock:
    Type: String
    Description: "Private Subnet1 CIDR Block"
    Default: "10.0.2.0/24"
  PrivateSubnet2CidrBlock:
    Type: String
    Description: "Private Subnet2 CIDR Block"
    Default: "10.0.3.0/24"
  TagPrefix:
    Type: String
    Description: "Prefix for the tags"
    Default: "MountFsxOnEc2"

Resources:
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-VPC"

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref PublicSubnet1CidrBlock
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PublicSubnet1"

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref PublicSubnet2CidrBlock
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PublicSubnet2"

  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref PrivateSubnet1CidrBlock
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PrivateSubnet1"

  PrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref PrivateSubnet2CidrBlock
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PrivateSubnet2"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-InternetGateway"

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PublicSubnetRouteTable"

  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnetDefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn:
      - InternetGatewayAttachment
      - PublicSubnet1RouteTableAssociation
      - PublicSubnet2RouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  NatGateway1EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-NatGateway1-EIP"

  NatGateway1:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-NatGateway1"

  PrivateSubnet1RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PrivateSubnet1RouteTable"

  PrivateSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet1DefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn:
      - NatGateway1EIP
      - PrivateSubnet1RouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway1

  NatGateway2EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-NatGateway2-EIP"

  NatGateway2:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-NatGateway2"

  PrivateSubnet2RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${TagPrefix}-PrivateSubnet2RouteTable"

  PrivateSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PrivateSubnet2RouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet2DefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn:
      - NatGateway2EIP
      - PrivateSubnet2RouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet2RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway2

Outputs:
  VpcId:
    Value: !Ref Vpc
  VpcCidrBlock:
    Value: !Ref VpcCidrBlock
  PublicSubnet1Id:
    Value: !Ref PublicSubnet1
  PublicSubnet1CidrBlock:
    Value: !Ref PublicSubnet1CidrBlock
  PublicSubnet2Id:
    Value: !Ref PublicSubnet2
  PublicSubnet2CidrBlock:
    Value: !Ref PublicSubnet2CidrBlock
  PrivateSubnet1Id:
    Value: !Ref PrivateSubnet1
  PrivateSubnet1CidrBlock:
    Value: !Ref PrivateSubnet1CidrBlock
  PrivateSubnet2Id:
    Value: !Ref PrivateSubnet2
  PrivateSubnet2CidrBlock:
    Value: !Ref PrivateSubnet2CidrBlock
